{
  "hash": "9391ebcf8bf500e83047f9cc7170185e",
  "result": {
    "markdown": "---\ntitle: \"Estimate multi-locus prevalence and frequency via naive methods\"\noutput: html_document\nauthor: \"Nick Hathaway\"\ndate: \"\"\n---\n\n\n\n\n## Tool Information\n\nThe prevalence of a multi-locus genotype is defined as the proportion of samples\nin which it is detected. In contrast, genotype frequency, while less\nstraightforward to define, represents the probability that a new malaria\ninfection carries this specific genotype. Prevalence and frequency are not\nequivalent because individuals can harbour multiple strains of malaria\nsimultaneously. As a result, the sum of prevalence values across all genotypes\nmay exceed 1, whereas genotype frequencies must always sum to exactly 1.\n\nCalculating genotype prevalence and frequency is more complex than it first\nappears, and depends on the number of heterozygous loci:\n\n- If there are **zero heterozygous loci** then we know exactly which genotype is present.\n  The genotype is fully phased.\n- If there is **a single heterozygous locus** then we know which two phased genotypes must\n  be present in the sample. From the relative read counts at this heterozygous locus we can obtain a\n  rough estimate of the within-sample proportions of each genotype.\n- If there are **two or more heterozygous loci** then we cannot unambiguously state which genotypes\n  are present. Doing so would require running more advanced methods that attempt to phase genotypes.\n\nWe can use these rules to obtain all known phased genotypes from the raw data.\nFor example, imagine we have the following two samples, defined in\n[variant string format](https://github.com/mrc-ide/variantstring):\n\n```\ncrt:1_2:A_A/C\ncrt:1_2_3:A/C_A_A/C\n```\n\nThe first sample we can unambiguously phase into the following two genotypes:\n\n```\ncrt:1_2:A_A\ncrt:1_2:A_C\n```\n\nThe second sample cannot be unambiguously phased due to the two heterozygous loci.\n\nNow imagine we are comparing both of these phased genotypes back against the\noriginal two samples. We would obtain the following matches:\n\n```\ncrt:1_2:A_A --> present unambiguously in sample1 and sample2\ncrt:1_2:A_C --> present unambiguously in sample1 only\n```\n\nNotice that for sample2, even though we were not able to extract its component\ngenotypes, we were still able to identify unambiguous matches against this\nsample. This is because we were not looking over all three positions, we were\nonly looking at two positions in which there was only one heterozygous locus.\n\nThis script performs these operations over an entire dataset. Briefly, it takes\nthe following steps:\n\n1. Convert input data into variant string format\n2. Extract all unambiguous phased genotypes from the data\n3. Compare all phased genotypes back against the data to estimate prevalence and frequency\n\nGenotype frequency in this case is obtained as the average of the within-sample\ngenotype frequencies (WSGF) over all samples. This has the advantage of being an\nunbiased estimator of the true population-level genotype frequency (PLGF)\nwithout requiring a known complexity of infection for each sample.\n\n\n## Script Usage\n\nThe `multilocus_prevfreq_naive.R` script contains all the functions needed to\nread in the data, calculate prevalence and frequency, and write results to file.\n\nAn example of usage, executed from the root of this repo, would be:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRscript scripts/multilocus_prevfreq_naive/multilocus_prevfreq_naive.R \\\n    --aa_table data/example_amino_acid_calls.tsv --loci_groups_input \\\n    data/example_loci_groups.tsv --output_path mlafp.tsv\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}